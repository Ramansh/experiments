<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <name>dt-server</name>
    <url>http://maven.apache.org</url>

    <groupId>com.blueoptima.dt</groupId>
    <artifactId>pa-server</artifactId>

    <packaging>war</packaging>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <jdk.version>1.7</jdk.version>
        <junit.version>4.11</junit.version>
        <spring.version>4.2.2.RELEASE</spring.version>
        <hibernate.version>4.3.9.Final</hibernate.version>
        <hibernate.validator.version>5.1.3.Final</hibernate.validator.version>
        <spring.security.version>3.2.10.RELEASE</spring.security.version>
        <java.jwt.version>2.0.1</java.jwt.version>
        <!--<saml.version>1.0.1.RELEASE</saml.version>-->
        <!-- AspectJ -->
        <jackson.version>2.9.9</jackson.version>
        <aspectj.version>1.8.1</aspectj.version>
    </properties>


    <repositories>
        <repository>
            <id>jcenter-snapshots</id>
            <name>jcenter</name>
            <url>https://jcenter.bintray.com/</url>
        </repository>
        <repository>
            <id>my-local-repo</id>
            <url>file://${basedir}/lib/</url>
        </repository>
      <!--  <repository>
            <id>central</id>
            <url>https://repo1.maven.org/maven2</url>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>-->
    </repositories>

    <dependencies>

        <!-- https://mvnrepository.com/artifact/com.google.maps/google-maps-services -->
        <dependency>
            <groupId>com.google.maps</groupId>
            <artifactId>google-maps-services</artifactId>
            <version>0.2.5</version>
        </dependency>



        <!-- httpmime -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
            <version>4.4.1</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.7.12</version>
        </dependency>

        <dependency>
            <groupId>com.auth0</groupId>
            <artifactId>java-jwt</artifactId>
            <version>${java.jwt.version}</version>
        </dependency>


        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.0.1</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>1.4.7</version>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>3.0.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>spring-mock-mvc</artifactId>
            <version>3.0.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>6.8</version>
            <scope>test</scope>
        </dependency>

        <!-- Spring Core -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-expression</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-oxm</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc-portlet</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.hornetq</groupId>
            <artifactId>hornetq-jms-client</artifactId>
            <version>2.4.1.Final</version>
        </dependency>


        <!--Spring Security -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version>${spring.security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version>${spring.security.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.quartz-scheduler/quartz -->
       <!-- <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>2.2.1</version>
        </dependency>-->

        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz-jboss</artifactId>
            <version>2.1.7</version>
        </dependency>
        <!-- Added for SAML -->
        <!--<dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>${spring.security.version}</version>
        </dependency>-->

        <!--Spring Aspects-->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>${aspectj.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjtools</artifactId>
            <version>${aspectj.version}</version>
        </dependency>

        <!-- Spring SAML -->

        <!--<dependency>
            <groupId>org.springframework.security.extensions</groupId>
            <artifactId>spring-security-saml2-core</artifactId>
            <version>${saml.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security.extensions</groupId>
            <artifactId>spring-security-saml2-core</artifactId>
            <version>${saml.version}</version>
        </dependency>-->


        <!-- Hibernate dependencies -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${hibernate.version}</version>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate.validator.version}</version>
        </dependency>



        <!-- Swagger -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.0.0</version>
        </dependency>

        <!--Password Encryption-->
        <dependency>
            <groupId>com.blueoptima</groupId>
            <artifactId>encryption-service</artifactId>
            <version>1.0</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/src/main/resources/passEncryption.jar</systemPath>
        </dependency>
        <!--Google Apis for Json conversion to object/object to Json-->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.3.1</version>
        </dependency>

        <dependency>
            <groupId>commons-validator</groupId>
            <artifactId>commons-validator</artifactId>
            <version>1.4.0</version>
        </dependency>

        <!-- jackson.core -->

        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-cbor -->
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-cbor</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!--csv-->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
            <version>1.4</version>
        </dependency>

        <!--Common Filer-->
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.3.2</version>
        </dependency>


        <!--Owasp Library-->
        <dependency>
            <groupId>org.owasp.encoder</groupId>
            <artifactId>encoder</artifactId>
            <version>1.2</version>
        </dependency>

        <!-- dependency for storing keys on google cloud storage -->
        <dependency>
            <groupId>com.google.cloud</groupId>
            <artifactId>google-cloud-storage</artifactId>
            <version>1.0.0</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.4</version>
        </dependency>

        <!--Apis for AWS-->
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-s3</artifactId>
            <version>1.10.69</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.freemarker/freemarker -->
        <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
            <version>2.3.23</version>
        </dependency>

        <!--Onfido maven dependency as it is not available on maven central -->
        <dependency>
            <groupId>com.onfido</groupId>
            <artifactId>onfido-java</artifactId>
            <version>1.6.0</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/src/main/resources/onfido-java-1.6.0.jar</systemPath>
        </dependency>

        <!--dependency for onfido library (explicitly mentioned as onfido is added locally)-->
        <dependency>
            <groupId>com.squareup.okhttp</groupId>
            <artifactId>okhttp</artifactId>
            <version>2.7.5</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.springframework/spring-test -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>

        <!--https://mvnrepository.com/artifact/org.powermock/powermock-module-testng-->
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-testng</artifactId>
            <version>1.6.5</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.powermock/powermock-api-mockito -->
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito2</artifactId>
            <version>1.6.5</version>
            <scope>test</scope>
        </dependency>

        <!--Equality assertion through reflection-->
        <dependency>
            <groupId>org.unitils</groupId>
            <artifactId>unitils-testng</artifactId>
            <version>3.4.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy</artifactId>
            <version>1.3.16</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.objenesis</groupId>
            <artifactId>objenesis</artifactId>
            <version>2.1</version>
            <scope>runtime</scope>
        </dependency>

          <!--https://mvnrepository.com/artifact/org.powermock/powermock-module-testng-->
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-testng</artifactId>
            <version>1.6.5</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.googlecode.json-simple</groupId>
            <artifactId>json-simple</artifactId>
            <version>1.1.1</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.relevantcodes/extentreports -->
        <dependency>
            <groupId>com.relevantcodes</groupId>
            <artifactId>extentreports</artifactId>
            <version>2.41.2</version>
            <scope>test</scope>
        </dependency>

    </dependencies>


    <!--Profiles for build server and jenkins-->
    <profiles>
        <profile>
            <id>build-server</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <!--Execute Grunt in Testing Interface-->
                    <plugin>
                        <artifactId>exec-maven-plugin</artifactId>
                        <groupId>org.codehaus.mojo</groupId>
                        <executions>
                            <execution>
                                <id>Build Version Generator</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${basedir}/grunt.sh</executable>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!--Execute Grunt in Testing Interface-->
                </plugins>
            </build>
            <properties>
                <build.profile.id>build-server</build.profile.id>
                <!--Running unit test cases on default profile by passing service suite file-->
                <suite.file.path>src/test/resources/dt-service-suite.xml</suite.file.path>
            </properties>
        </profile>

        <profile>
            <id>unit-tests</id>
            <properties>
                <build.profile.id>unit-tests</build.profile.id>
                <!--Running only unit test cases on this profile by passing service suite file-->
                <suite.file.path>src/test/resources/dt-service-suite.xml</suite.file.path>
            </properties>
        </profile>

        <profile>
            <id>integration-tests</id>
            <properties>
                <build.profile.id>integration-tests</build.profile.id>
                <!--Running only integration test cases on this profile by passing integration suite file-->
                <suite.file.path>src/test/resources/dt-integration-suite.xml</suite.file.path>
            </properties>

            <dependencies>
                <!--Needed for integration testing-->
                <dependency>
                    <groupId>org.postgresql</groupId>
                    <artifactId>postgresql</artifactId>
                    <version>9.3-1102-jdbc41</version>
                    <scope>provided</scope>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>all-tests</id>
            <properties>
                <build.profile.id>all-tests</build.profile.id>
                <!--Running all test cases on this profile by passing dt-suite file which contains both unit and integration test cases-->
                <suite.file.path>src/test/resources/dt-suite.xml</suite.file.path>
            </properties>

            <dependencies>
                <!--Needed for integration testing-->
                <dependency>
                    <groupId>org.postgresql</groupId>
                    <artifactId>postgresql</artifactId>
                    <version>9.3-1102-jdbc41</version>
                    <scope>provided</scope>
                </dependency>
            </dependencies>

        </profile>

    </profiles>


    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>src/main/webapp/WEB-INF</directory>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1.1</version>
                <configuration>
                    <failOnMissingWebXml>true</failOnMissingWebXml>
                </configuration>
            </plugin>

            <!--<plugin>
                <artifactId>exec-maven-plugin</artifactId>
                <groupId>org.codehaus.mojo</groupId>
                <executions>
                    <execution>&lt;!&ndash; Run our version calculation script &ndash;&gt;
                        <id>Build Version Generator</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${basedir}/BuildNumberGenerator.sh</executable>
                        </configuration>
                    </execution>
                </executions>
            </plugin>-->

            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.7</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/${project.artifactId}/dt</outputDirectory>
                            <resources>
                                <resource>
                                   <directory>testing-interface/dt</directory>
                                   <!-- <directory>uix/uix/uix</directory>-->
                                    <filtering>false</filtering>
                                    <!--<excludes>-->
                                    <!--<exclude>dt/**</exclude>-->
                                    <!--</excludes>-->
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.10</version>
                <executions>
                    <execution>
                        <id>copy-packaged</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <!--<goal>copy</goal>-->
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <!--<artifactItems>
                            <artifactItem>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>${project.artifactId}</artifactId>
                            <version>${project.version}</version>
                            <type>${project.packaging}</type>
                            <destFileName>${project.artifactId}.${project.packaging}</destFileName>
                            </artifactItem>
                            </artifactItems>-->
                            <outputDirectory>${project.build.directory}/${project.artifactId}\WEB-INF\lib
                            </outputDirectory>
                            <overWriteReleases>true</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>3.5</version>
                <configuration>
                    <sourceEncoding>utf-8</sourceEncoding>
                    <minimumTokens>100</minimumTokens>
                    <targetJdk>1.7</targetJdk>
                </configuration>
            </plugin>
            <!--<plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>2.5.2</version>
                <configuration>
                    &lt;!&ndash;
                        Enables analysis which takes more memory but finds more bugs.
                        If you run out of memory, changes the value of the effort element
                        to 'low'.
                    &ndash;&gt;
                    <effort>Max</effort>
                    &lt;!&ndash; Reports all bugs (other values are medium and max) &ndash;&gt;
                    <threshold>Low</threshold>
                    &lt;!&ndash; Produces XML report &ndash;&gt;
                    <xmlOutput>true</xmlOutput>
                </configuration>
            </plugin>-->

            <plugin>
                <groupId>com.lazerycode.jmeter</groupId>
                <artifactId>jmeter-maven-plugin</artifactId>
                <version>1.10.1</version>
                <configuration>
                    <!--
                       By default the test results are saved in a file
                       /target/jmeter/results/<testname>-<timestamp>.jtl
                       Further processing is easier without timestamp though.
                    -->
                    <testResultsTimestamp>false</testResultsTimestamp>

                    <!--
                       To simplify debugging, it is advisable to adapt the loglevel.
                       The jmeter logs are written to the file jmeter.log.
                    -->
                    <overrideRootLogLevel>DEBUG</overrideRootLogLevel>

                    <!--
                       By default, the console output during a jmeter test run is suppressed.
                       We want to display the progress using the listener "Generate Summary Results"
                       (which periodically prints stats to stdout). Therefore we have to make sure,
                       that the jmeter output is not suppressed.
                    -->
                    <suppressJMeterOutput>false</suppressJMeterOutput>

                    <!--
                       If tests fail (e.g. a http-request running into a timeout), the corresponding maven
                       goal also fails (and subsequent goals aren't executed anymore). We want to create graphs
                       from test-results, no matter if some requests failed or not, so we ignore jmeter failures.
                    -->
                    <ignoreResultFailures>true</ignoreResultFailures>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>kg.apc</groupId>
                        <artifactId>jmeter-plugins</artifactId>
                        <version>1.0.0</version>
                        <exclusions>
                            <!--
                                Unfortunately some transitive dependencies cannot be found on mvncentral
                                and we have to explicitly exclude them.
                                For a complete list, see https://github.com/mlex/jmeter-maven-example/
                            -->
                            <exclusion>
                                <groupId>kg.apc</groupId>
                                <artifactId>perfmon</artifactId>
                            </exclusion>
                            <!-- ... -->

                            <!--
                                Because of a bug in the jmeter-maven-plugin (see
                                https://github.com/Ronnie76er/jmeter-maven-plugin/issues/77) we have to
                                exclude jmeter dependencies here, too.
                            -->
                            <exclusion>
                                <groupId>org.apache.jmeter</groupId>
                                <artifactId>jorphan</artifactId>
                            </exclusion>
                            <!-- ... -->
                        </exclusions>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.0</version>
                <configuration>
                    <!-- Suite dt-suite xml file to consider for test execution -->
                    <environmentVariables>
                        <BLUEOPTIMA_HOME>${project.basedir}/</BLUEOPTIMA_HOME>
                    </environmentVariables>
                    <systemPropertyVariables>
                        <BLUEOPTIMA_HOME>${project.basedir}</BLUEOPTIMA_HOME>
                    </systemPropertyVariables>
                    <suiteXmlFiles>
                        <suiteXmlFile>${suite.file.path}</suiteXmlFile>
                    </suiteXmlFiles>
                </configuration>
            </plugin>

        </plugins>
        <finalName>${project.artifactId}</finalName>




    </build>
</project>
